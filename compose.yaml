services:
  pgdb-users:
    container_name: bfa-db
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root_password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: bfa-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: bfa-kafka
    user: root
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29094,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29094,PLAINTEXT_HOST://0.0.0.0:9092
    networks:
      - my-network

  hazelcast:
    image: hazelcast/hazelcast
    container_name: bfa-hazelcast
    ports:
      - "5701:5701"
    networks:
      - my-network

  management-center:
    image: hazelcast/management-center
    ports:
      - "8080:8080"
    environment:
      - MC_DEFAULT_CLUSTER=dev
      - MC_DEFAULT_CLUSTER_MEMBERS=hazelcast
    networks:
      - my-network

  bfa-user-server:
    container_name: user-server
    image: croco/interview-user
    ports:
      - 8282:8282
    networks:
      - my-network

  bfa-orders-server:
    container_name: order-server
    image: croco/interview-orders
    ports:
      - 8181:8181
    networks:
      - my-network

networks:
  my-network:
    driver: bridge